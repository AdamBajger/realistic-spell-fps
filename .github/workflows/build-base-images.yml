# Build Base Docker Images Workflow
#
# This workflow builds and publishes base builder images to Docker registries.
# These images contain build dependencies and are rarely updated.
# 
# Triggers:
#   - When base Dockerfile files are modified
#   - Manual workflow dispatch for rebuilds
#
# Images built:
#   - base-builder-linux: Linux build dependencies (Rust + pkg-config + libssl-dev)
#   - base-builder-windows: Windows build dependencies (MSVC + Rust)
#
# Published to: Docker Hub (default) or custom registry via secrets
# Versioning: Uses short commit hash with 'dev-' prefix (e.g., dev-abc1234)
#
# Required secrets:
#   - DOCKERHUB_USERNAME: Docker Hub username
#   - DOCKERHUB_TOKEN: Docker Hub access token
#
name: Build Base Images

on:
  push:
    branches: [ master, main ]
    paths:
      - '.devcontainer/base-builder-linux.Dockerfile'
      - '.devcontainer/base-builder-windows.Dockerfile'
      - '.github/workflows/build-base-images.yml'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all base images'
        required: false
        default: 'false'

env:
  # Use Docker Hub by default, can be overridden via secrets
  REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'docker.io' }}
  REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME || secrets.DOCKER_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN || secrets.DOCKER_PASSWORD }}

jobs:
  build-base-linux:
    name: Build Linux Base Builder
    runs-on: ubuntu-latest
    # Only run if Linux Dockerfile changed or force rebuild requested
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.modified, '.devcontainer/base-builder-linux.Dockerfile') ||
      contains(github.event.head_commit.added, '.devcontainer/base-builder-linux.Dockerfile')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Generate image tag
        id: tag
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "version=dev-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "Building with tag: dev-${SHORT_SHA}"
      
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      
      - name: Build and push Linux base builder
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.devcontainer/base-builder-linux.Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}/base-builder-linux:${{ steps.tag.outputs.version }}
            ${{ env.REGISTRY }}/${{ github.repository }}/base-builder-linux:latest
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-base-windows:
    name: Build Windows Base Builder
    runs-on: windows-2022
    # Only run if Windows Dockerfile changed or force rebuild requested
    if: |
      github.event_name == 'workflow_dispatch' ||
      contains(github.event.head_commit.modified, '.devcontainer/base-builder-windows.Dockerfile') ||
      contains(github.event.head_commit.added, '.devcontainer/base-builder-windows.Dockerfile')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Generate image tag
        id: tag
        shell: bash
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "version=dev-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "Building with tag: dev-${SHORT_SHA}"
      
      - name: Prepare repository name
        id: prepare
        shell: bash
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repo=${REPO_LOWER}" >> $GITHUB_OUTPUT
      
      - name: Log in to Docker Registry
        run: |
          echo "${{ env.REGISTRY_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u ${{ env.REGISTRY_USERNAME }} --password-stdin
      
      - name: Build Windows base builder image
        run: |
          docker build -f .devcontainer/base-builder-windows.Dockerfile -t ${{ env.REGISTRY }}/${{ steps.prepare.outputs.repo }}/base-builder-windows:${{ steps.tag.outputs.version }} .
          docker tag ${{ env.REGISTRY }}/${{ steps.prepare.outputs.repo }}/base-builder-windows:${{ steps.tag.outputs.version }} ${{ env.REGISTRY }}/${{ steps.prepare.outputs.repo }}/base-builder-windows:latest
      
      - name: Push Windows base builder image
        run: |
          docker push ${{ env.REGISTRY }}/${{ steps.prepare.outputs.repo }}/base-builder-windows:${{ steps.tag.outputs.version }}
          docker push ${{ env.REGISTRY }}/${{ steps.prepare.outputs.repo }}/base-builder-windows:latest
