# Docker Build Workflow
#
# Simple, single-platform Docker builds for quick iterations
# Runs on pushes to master/main and on version tags
#
# Use this for: Quick testing, development builds
# Use docker-multiplatform.yml for: Production multi-platform builds
#
# Images:
#   - client: Built from .devcontainer/client.Dockerfile
#   - server: Built from .devcontainer/server.Dockerfile
#
# Uses pre-built base builder images from Docker Hub or custom registry
# Base images are built separately via build-base-images.yml workflow
#
# Published to: GitHub Container Registry (ghcr.io)
# Tags: branch name, PR number, semver from git tags
#
# Cargo.lock handling:
#   - Dockerfiles use COPY Cargo.lock* pattern to handle missing lock file
#   - If missing, cargo will generate it during docker build
#
name: Docker Build

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
    # Don't trigger when only base Dockerfiles change (those are handled by build-base-images.yml)
    paths-ignore:
      - '.devcontainer/base-builder-linux.Dockerfile'
      - '.devcontainer/base-builder-windows.Dockerfile'
      - '.github/workflows/build-base-images.yml'
  pull_request:
    branches: [ master, main ]
    paths-ignore:
      - '.devcontainer/base-builder-linux.Dockerfile'
      - '.devcontainer/base-builder-windows.Dockerfile'
      - '.github/workflows/build-base-images.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_CLIENT: ${{ github.repository }}/client
  IMAGE_NAME_SERVER: ${{ github.repository }}/server
  # Base builder images registry (Docker Hub by default)
  BASE_REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'docker.io' }}
  BASE_REPO: ${{ secrets.DOCKERHUB_USERNAME || github.repository }}

jobs:
  build-client:
    name: Build Client Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_CLIENT }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.devcontainer/client.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_BUILDER_IMAGE=${{ env.BASE_REGISTRY }}/${{ env.BASE_REPO }}/base-builder-linux:latest

  build-server:
    name: Build Server Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_SERVER }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.devcontainer/server.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BASE_BUILDER_IMAGE=${{ env.BASE_REGISTRY }}/${{ env.BASE_REPO }}/base-builder-linux:latest
